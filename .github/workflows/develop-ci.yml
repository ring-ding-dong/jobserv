name: Jobserv CI (Develop)

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'zulu'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test

      - name: Generate JaCoCo coverage report
        run: ./gradlew jacocoRootReport

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./build/reports/jacoco/jacocoRootReport/jacocoRootReport.xml
          flags: develop

      - name: Check test coverage
        run: |
          COVERAGE=$(./gradlew jacocoTestCoverageVerification -PminCoverage=75)
          if [[ $COVERAGE == *"FAILURE"* ]]; then
            echo "Test coverage is below 75%. Please improve test coverage before merging to main."
            exit 1
          fi

      - name: Generate Javadoc
        run: ./gradlew aggregateJavadoc

      - name: Build snapshot
        if: github.event_name == 'push'
        run: ./gradlew assemble

      - name: Publish snapshot to GitHub Packages
        if: github.event_name == 'push'
        run: ./gradlew publish
        env:
          GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/libs/*.jar

      - name: Archive Javadoc
        uses: actions/upload-artifact@v3
        with:
          name: javadoc
          path: build/docs/javadoc

      - name: Prepare release notes
        if: github.event_name == 'push'
        run: |
          echo "## What's Changed" > release_notes.md
          git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"- %s" >> release_notes.md

      - name: Upload release notes
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: release-notes
          path: release_notes.md